--- ../src-base/minecraft/net/minecraft/network/NetworkManager.java
+++ ../src-work/minecraft/net/minecraft/network/NetworkManager.java
@@ -77,6 +77,7 @@
     private final Queue<NetworkManager.InboundHandlerTuplePacketListener> field_150745_j = Queues.<NetworkManager.InboundHandlerTuplePacketListener>newConcurrentLinkedQueue();
     private final ReentrantReadWriteLock field_181680_j = new ReentrantReadWriteLock();
     private Channel field_150746_k;
+    public boolean preparing = true;
     private SocketAddress field_150743_l;
     private INetHandler field_150744_m;
     private ITextComponent field_150742_o;
@@ -88,12 +89,17 @@
         this.field_179294_g = p_i46004_1_;
     }
 
+    public EnumPacketDirection getDirection()
+    {
+        return this.field_179294_g;
+    }
+
     public void channelActive(ChannelHandlerContext p_channelActive_1_) throws Exception
     {
         super.channelActive(p_channelActive_1_);
         this.field_150746_k = p_channelActive_1_.channel();
         this.field_150743_l = this.field_150746_k.remoteAddress();
-
+        this.preparing = false;
         try
         {
             this.func_150723_a(EnumConnectionState.HANDSHAKING);
@@ -204,7 +210,7 @@
         final EnumConnectionState enumconnectionstate = EnumConnectionState.func_150752_a(p_150732_1_);
         final EnumConnectionState enumconnectionstate1 = (EnumConnectionState)this.field_150746_k.attr(field_150739_c).get();
 
-        if (enumconnectionstate1 != enumconnectionstate)
+        if (enumconnectionstate1 != enumconnectionstate && !( p_150732_1_ instanceof net.minecraftforge.fml.common.network.internal.FMLProxyPacket))
         {
             field_150735_g.debug("Disabled auto read");
             this.field_150746_k.config().setAutoRead(false);
@@ -212,7 +218,7 @@
 
         if (this.field_150746_k.eventLoop().inEventLoop())
         {
-            if (enumconnectionstate != enumconnectionstate1)
+            if (enumconnectionstate != enumconnectionstate1 && !( p_150732_1_ instanceof net.minecraftforge.fml.common.network.internal.FMLProxyPacket))
             {
                 this.func_150723_a(enumconnectionstate);
             }
@@ -232,7 +238,7 @@
             {
                 public void run()
                 {
-                    if (enumconnectionstate != enumconnectionstate1)
+                    if (enumconnectionstate != enumconnectionstate1  && !( p_150732_1_ instanceof net.minecraftforge.fml.common.network.internal.FMLProxyPacket))
                     {
                         NetworkManager.this.func_150723_a(enumconnectionstate);
                     }
@@ -293,6 +299,7 @@
 
     public void func_150718_a(ITextComponent p_150718_1_)
     {
+    	this.preparing = false;
         if (this.field_150746_k.isOpen())
         {
             this.field_150746_k.close().awaitUninterruptibly();
@@ -308,6 +315,7 @@
     @SideOnly(Side.CLIENT)
     public static NetworkManager func_181124_a(InetAddress p_181124_0_, int p_181124_1_, boolean p_181124_2_)
     {
+        if (p_181124_0_ instanceof java.net.Inet6Address) System.setProperty("java.net.preferIPv4Stack", "false");
         final NetworkManager networkmanager = new NetworkManager(EnumPacketDirection.CLIENTBOUND);
         Class <? extends SocketChannel > oclass;
         LazyLoadBase <? extends EventLoopGroup > lazyloadbase;
@@ -450,10 +458,16 @@
                 {
                     this.func_150729_e().func_147231_a(new TextComponentTranslation("multiplayer.disconnect.generic", new Object[0]));
                 }
+                this.field_150745_j.clear();
             }
         }
     }
 
+    public Channel channel()
+    {
+        return field_150746_k;
+    }
+
     static class InboundHandlerTuplePacketListener
         {
             private final Packet<?> field_150774_a;
